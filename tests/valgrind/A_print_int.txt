==665383== Memcheck, a memory error detector
==665383== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==665383== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==665383== Command: ../decaf inputs/print_int.decaf
==665383== 
main:
  push BP
  i2i SP => BP
  addI SP, 0 => SP
  call print_int
  loadI 0 => r1
  i2i r1 => RET
  i2i r1 => RET
l0:
  i2i BP => SP
  pop BP
  return

==========================
sp=65536 bp=-9999999 ret=-9999999
virtual regs: 
stack:
other memory:
==========================

Executing: push BP

==========================
sp=65528 bp=-9999999 ret=-9999999
virtual regs: 
stack:  65528: -9999999
other memory:
==========================

Executing: i2i SP => BP

==========================
sp=65528 bp=65528 ret=-9999999
virtual regs: 
stack:  65528: -9999999
other memory:
==========================

Executing: addI SP, 0 => SP

==========================
sp=65528 bp=65528 ret=-9999999
virtual regs: 
stack:  65528: -9999999
other memory:
==========================

Executing: call print_int
ERROR: No call target found for 'print_int'
==665383== 
==665383== HEAP SUMMARY:
==665383==     in use at exit: 127,816 bytes in 16 blocks
==665383==   total heap usage: 1,820 allocs, 1,804 frees, 373,268 bytes allocated
==665383== 
==665383== LEAK SUMMARY:
==665383==    definitely lost: 0 bytes in 0 blocks
==665383==    indirectly lost: 0 bytes in 0 blocks
==665383==      possibly lost: 0 bytes in 0 blocks
==665383==    still reachable: 127,816 bytes in 16 blocks
==665383==         suppressed: 0 bytes in 0 blocks
==665383== Rerun with --leak-check=full to see details of leaked memory
==665383== 
==665383== For lists of detected and suppressed errors, rerun with: -s
==665383== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
