digraph AST {
3 [shape=box, label="VarDecl name='a'"];
5 [shape=box, label="Location name='a'\nreg: r0\ncode: \nloadAI [BP-8] => r0\ntype: int"];
6 [shape=box, label="Literal value=0\nreg: r1\ncode: \nloadI 0 => r1\ntype: int"];
4 [shape=box, label="Assignment\ncode: \nloadI 0 => r1\nstoreAI r1 => [BP-8]"];
4 -> 5;
4 -> 6;
8 [shape=box, label="Literal value=10\nreg: r2\ncode: \nloadI 10 => r2\ntype: int"];
7 [shape=box, label="Return\ncode: \nloadI 10 => r2\ni2i r2 => RET\ni2i r2 => RET"];
7 -> 8;
2 [shape=box, label="Block\ncode: \nloadI 0 => r1\nstoreAI r1 => [BP-8]\nloadI 10 => r2\ni2i r2 => RET\ni2i r2 => RET\nsymbolTable: \n  a : int {stack offset=-8}"];
2 -> 3;
2 -> 4;
2 -> 7;
1 [shape=box, label="FuncDecl name='ten'\ncode: \nten:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadI 0 => r1\nstoreAI r1 => [BP-8]\nloadI 10 => r2\ni2i r2 => RET\ni2i r2 => RET\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
1 -> 2;
11 [shape=box, label="VarDecl name='a'"];
13 [shape=box, label="Location name='a'\nreg: r4\ncode: \nloadAI [BP-8] => r4\ntype: int"];
14 [shape=box, label="Literal value=0\nreg: r5\ncode: \nloadI 0 => r5\ntype: int"];
12 [shape=box, label="Assignment\ncode: \nloadI 0 => r5\nstoreAI r5 => [BP-8]"];
12 -> 13;
12 -> 14;
16 [shape=box, label="FuncCall name='ten'\ncode: \ncall ten\nreg: r2\ntype: int"];
15 [shape=box, label="Return\ncode: \ncall ten\ni2i r2 => RET\ni2i r2 => RET"];
15 -> 16;
10 [shape=box, label="Block\ncode: \nloadI 0 => r5\nstoreAI r5 => [BP-8]\ncall ten\ni2i r2 => RET\ni2i r2 => RET\nsymbolTable: \n  a : int {stack offset=-8}"];
10 -> 11;
10 -> 12;
10 -> 15;
9 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadI 0 => r5\nstoreAI r5 => [BP-8]\ncall ten\ni2i r2 => RET\ni2i r2 => RET\nl1:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
9 -> 10;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  ten : () -> int\n  main : () -> int"];
0 -> 1;
0 -> 9;
}
