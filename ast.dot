digraph AST {
3 [shape=box, label="VarDecl name='a'"];
4 [shape=box, label="VarDecl name='b'"];
6 [shape=box, label="Location name='a'\nreg: r0\ncode: \nloadAI [BP-8] => r0\ntype: int"];
7 [shape=box, label="Literal value=1\nreg: r1\ncode: \nloadI 1 => r1\ntype: int"];
5 [shape=box, label="Assignment\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-8]"];
5 -> 6;
5 -> 7;
9 [shape=box, label="Location name='b'\nreg: r2\ncode: \nloadAI [BP-16] => r2\ntype: int"];
10 [shape=box, label="Literal value=1\nreg: r3\ncode: \nloadI 1 => r3\ntype: int"];
8 [shape=box, label="Assignment\ncode: \nloadI 1 => r3\nstoreAI r3 => [BP-16]"];
8 -> 9;
8 -> 10;
13 [shape=box, label="Location name='a'\nreg: r4\ncode: \nloadAI [BP-8] => r4\ntype: int"];
14 [shape=box, label="Literal value=3\nreg: r5\ncode: \nloadI 3 => r5\ntype: int"];
12 [shape=box, label="BinaryOp op='<'\nreg: r6\ncode: \nloadAI [BP-8] => r4\nloadI 3 => r5\ncmp_LT r4, r5 => r6\ntype: bool"];
12 -> 13;
12 -> 14;
18 [shape=box, label="Location name='b'\nreg: r7\ncode: \nloadAI [BP-16] => r7\ntype: int"];
19 [shape=box, label="Literal value=5\nreg: r8\ncode: \nloadI 5 => r8\ntype: int"];
17 [shape=box, label="BinaryOp op='<'\nreg: r9\ncode: \nloadAI [BP-16] => r7\nloadI 5 => r8\ncmp_LT r7, r8 => r9\ntype: bool"];
17 -> 18;
17 -> 19;
23 [shape=box, label="Location name='b'\nreg: r10\ncode: \nloadAI [BP-16] => r10\ntype: int"];
24 [shape=box, label="Literal value=3\nreg: r11\ncode: \nloadI 3 => r11\ntype: int"];
22 [shape=box, label="BinaryOp op='=='\nreg: r12\ncode: \nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ntype: bool"];
22 -> 23;
22 -> 24;
27 [shape=box, label="Location name='b'\nreg: r13\ncode: \nloadAI [BP-16] => r13\ntype: int"];
28 [shape=box, label="Literal value=4\nreg: r14\ncode: \nloadI 4 => r14\ntype: int"];
26 [shape=box, label="Assignment\ncode: \nloadI 4 => r14\nstoreAI r14 => [BP-16]"];
26 -> 27;
26 -> 28;
29 [shape=box, label="Continue\ncode: \njump l4"];
31 [shape=box, label="Location name='b'\nreg: r15\ncode: \nloadAI [BP-16] => r15\ntype: int"];
32 [shape=box, label="Literal value=1000\nreg: r16\ncode: \nloadI 1000 => r16\ntype: int"];
30 [shape=box, label="Assignment\ncode: \nloadI 1000 => r16\nstoreAI r16 => [BP-16]"];
30 -> 31;
30 -> 32;
25 [shape=box, label="Block\ncode: \nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nsymbolTable: (empty)"];
25 -> 26;
25 -> 29;
25 -> 30;
21 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ncbr r12 => l7, l8\nl7:\nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nl8:"];
21 -> 22;
21 -> 25;
34 [shape=box, label="Location name='b'\nreg: r17\ncode: \nloadAI [BP-16] => r17\ntype: int"];
36 [shape=box, label="Location name='b'\nreg: r18\ncode: \nloadAI [BP-16] => r18\ntype: int"];
37 [shape=box, label="Literal value=1\nreg: r19\ncode: \nloadI 1 => r19\ntype: int"];
35 [shape=box, label="BinaryOp op='+'\nreg: r20\ncode: \nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\ntype: int"];
35 -> 36;
35 -> 37;
33 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\nstoreAI r20 => [BP-16]"];
33 -> 34;
33 -> 35;
20 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ncbr r12 => l7, l8\nl7:\nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nl8:\nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\nstoreAI r20 => [BP-16]\nsymbolTable: (empty)"];
20 -> 21;
20 -> 33;
16 [shape=box, label="WhileLoop\ncode: \nl4:\nloadAI [BP-16] => r7\nloadI 5 => r8\ncmp_LT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ncbr r12 => l7, l8\nl7:\nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nl8:\nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\nstoreAI r20 => [BP-16]\njump l4\nl6:"];
16 -> 17;
16 -> 20;
39 [shape=box, label="Location name='a'\nreg: r21\ncode: \nloadAI [BP-8] => r21\ntype: int"];
41 [shape=box, label="Location name='a'\nreg: r22\ncode: \nloadAI [BP-8] => r22\ntype: int"];
42 [shape=box, label="Literal value=1\nreg: r23\ncode: \nloadI 1 => r23\ntype: int"];
40 [shape=box, label="BinaryOp op='+'\nreg: r24\ncode: \nloadAI [BP-8] => r22\nloadI 1 => r23\nadd r22, r23 => r24\ntype: int"];
40 -> 41;
40 -> 42;
38 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r22\nloadI 1 => r23\nadd r22, r23 => r24\nstoreAI r24 => [BP-8]"];
38 -> 39;
38 -> 40;
43 [shape=box, label="Break\ncode: \njump l3"];
15 [shape=box, label="Block\ncode: \nl4:\nloadAI [BP-16] => r7\nloadI 5 => r8\ncmp_LT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ncbr r12 => l7, l8\nl7:\nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nl8:\nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\nstoreAI r20 => [BP-16]\njump l4\nl6:\nloadAI [BP-8] => r22\nloadI 1 => r23\nadd r22, r23 => r24\nstoreAI r24 => [BP-8]\njump l3\nsymbolTable: (empty)"];
15 -> 16;
15 -> 38;
15 -> 43;
11 [shape=box, label="WhileLoop\ncode: \nl1:\nloadAI [BP-8] => r4\nloadI 3 => r5\ncmp_LT r4, r5 => r6\ncbr r6 => l2, l3\nl2:\nl4:\nloadAI [BP-16] => r7\nloadI 5 => r8\ncmp_LT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ncbr r12 => l7, l8\nl7:\nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nl8:\nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\nstoreAI r20 => [BP-16]\njump l4\nl6:\nloadAI [BP-8] => r22\nloadI 1 => r23\nadd r22, r23 => r24\nstoreAI r24 => [BP-8]\njump l3\njump l1\nl3:"];
11 -> 12;
11 -> 15;
45 [shape=box, label="Location name='a'\nreg: r25\ncode: \nloadAI [BP-8] => r25\ntype: int"];
44 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r25\ni2i r25 => RET"];
44 -> 45;
2 [shape=box, label="Block\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-8]\nloadI 1 => r3\nstoreAI r3 => [BP-16]\nl1:\nloadAI [BP-8] => r4\nloadI 3 => r5\ncmp_LT r4, r5 => r6\ncbr r6 => l2, l3\nl2:\nl4:\nloadAI [BP-16] => r7\nloadI 5 => r8\ncmp_LT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ncbr r12 => l7, l8\nl7:\nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nl8:\nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\nstoreAI r20 => [BP-16]\njump l4\nl6:\nloadAI [BP-8] => r22\nloadI 1 => r23\nadd r22, r23 => r24\nstoreAI r24 => [BP-8]\njump l3\njump l1\nl3:\nloadAI [BP-8] => r25\ni2i r25 => RET\nsymbolTable: \n  a : int {stack offset=-8}\n  b : int {stack offset=-16}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 8;
2 -> 11;
2 -> 44;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadI 1 => r1\nstoreAI r1 => [BP-8]\nloadI 1 => r3\nstoreAI r3 => [BP-16]\nl1:\nloadAI [BP-8] => r4\nloadI 3 => r5\ncmp_LT r4, r5 => r6\ncbr r6 => l2, l3\nl2:\nl4:\nloadAI [BP-16] => r7\nloadI 5 => r8\ncmp_LT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP-16] => r10\nloadI 3 => r11\ncmp_EQ r10, r11 => r12\ncbr r12 => l7, l8\nl7:\nloadI 4 => r14\nstoreAI r14 => [BP-16]\njump l4\nloadI 1000 => r16\nstoreAI r16 => [BP-16]\nl8:\nloadAI [BP-16] => r18\nloadI 1 => r19\nadd r18, r19 => r20\nstoreAI r20 => [BP-16]\njump l4\nl6:\nloadAI [BP-8] => r22\nloadI 1 => r23\nadd r22, r23 => r24\nstoreAI r24 => [BP-8]\njump l3\njump l1\nl3:\nloadAI [BP-8] => r25\ni2i r25 => RET\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}
